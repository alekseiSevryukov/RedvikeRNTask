import {createApi, fetchBaseQuery} from '@reduxjs/toolkit/query/react';
import {IPokemonResponse, PokemonsListResponse} from './types';

/**
 * Creates an API slice using RTK Query.
 *
 * This API slice is configured with a base URL and two endpoints:
 * - getPokemons: Fetches a list of Pokémon with a specified limit.
 * - getPokemonById: Fetches a single Pokémon by its ID.
 *
 * The responses from these endpoints are transformed before they are returned.
 *
 * @returns {Api} The configured API slice.
 */
const api = createApi({
  reducerPath: 'pokemonsApi',
  baseQuery: fetchBaseQuery({
    baseUrl: 'https://pokeapi.co/api/v2/',
  }),
  endpoints: build => ({
    getPokemons: build.query({
      query: (limit: number) => `pokemon?limit=${limit}`,
      transformResponse: (response: PokemonsListResponse) => response.results,
    }),
    getPokemonById: build.query({
      query: (id: number) => `pokemon/${id}`,
      transformResponse: (response: IPokemonResponse) => response,
    }),
  }),
});

/**
 * Exports the hooks generated by RTK Query for the getPokemons and getPokemonById endpoints.
 */
export const {useGetPokemonsQuery, useGetPokemonByIdQuery} = api;

export default api;
